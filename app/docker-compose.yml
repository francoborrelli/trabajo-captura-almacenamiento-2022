version: '3.3'

services:
  api:
    container_name: products_api
    build:
      context: ./
      dockerfile: ./docker/local/api/Dockerfile
    volumes:
      - ./:/app
      - ./.m2:/root/.m2
    working_dir: /app
    command: sh ./docker/local/api/run.sh
    env_file:
      - ./env/.env.app
    ports:
      - 8080:8080
      - 35729:35729
      - 5005:5005
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - app-network

  postgres:
    image: postgres:14.4
    container_name: products_postgres
    ports:
      - '5432:5432'
    env_file:
      - ./env/.env.postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U docker']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: products_elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      - app-network

  logstash:
    build:
      context: ./
      dockerfile: ./docker/local/logstash/Dockerfile
    container_name: products_logstash
    env_file:
      - ./env/.env.logstash
    ports:
      - '5000:5000'
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - app-network

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.2.0
  #   container_name: kibana
  #   environment:
  #     ELASTICSEARCH_URL: 'http://elasticsearch:9300'
  #   ports:
  #     - 5601:5601
  #   networks:
  #     - local_network

volumes:
  esdata:
  postgres-data:
    driver: local

networks:
  app-network:
    external: true
